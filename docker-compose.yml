version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fedify-backend
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=fedify_microblog
      - FEDERATION_DOMAIN=macbookpro.tailc130f9.ts.net
      - FEDERATION_ORIGIN=https://macbookpro.tailc130f9.ts.net/
      - FEDERATION_PROTOCOL=https
      - JWT_SECRET=your-secret-key-change-in-production
      - FRONTEND_URL=http://localhost:3001
    volumes:
      # Mount source code for hot reloading
      - ./packages/backend:/app/packages/backend
      # Prevent node_modules from being overwritten
      - /app/node_modules
      - /app/packages/backend/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fedify-network
    command: yarn workspace @cosmoslide/backend start:dev

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: fedify-frontend
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    volumes:
      # Mount frontend source for hot reloading
      - ./packages/frontend:/app/packages/frontend
      # Prevent node_modules from being overwritten
      - ./node_modules:/app/node_modules
      - /app/packages/frontend/node_modules
      - /app/packages/frontend/.next
    depends_on:
      - backend
    networks:
      - fedify-network
    command: yarn workspace @cosmoslide/frontend dev

  postgres:
    image: postgres:16-alpine
    container_name: fedify-postgres
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fedify_microblog
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fedify-network

volumes:
  postgres_data:

networks:
  fedify-network:
    driver: bridge
